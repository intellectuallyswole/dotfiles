export SHELL=zsh;

#hg aliases
alias hw='hg log --numstat';
alias brh='hg bookmarks';
alias hst='hg status';
alias hupdate='hg commit -A --amend --reuse-message .';

#git
alias gw='git log --numstat';
alias br='git branch';
alias st='git status';
alias cont='git rebase --continue; git cherry-pick --continue;'
alias gupdate='git commit -a --amend --reuse-message=HEAD'
alias amend='git commit -a --amend --reuse-message=HEAD'
alias up='git fetch; git rebase origin/master';
alias reb='git rebase -i';
alias rb='git rebase';
alias change='git log --reverse origin/stable..';
function mup () {
  branchname="$(git symbolic-ref --short HEAD)"
  git checkout master && git fetch -p origin &&  git reset --hard origin/master
  git checkout "$branchname"
}
alias co='git checkout';
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %C(cyan)%an%Creset %C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative";
function gb () {
  git branch $1 && git checkout $1
}
function branchclean() {
  git fetch --prune; git branch -vv | grep ': gone]' |  grep -v "\*" | awk '{ print $1; }' | xargs git branch -D;
}

# tmux
alias tsb='tmux show-buffer'
alias tcp='tmux show-buffer | pbcopy'
function notify {
if $@
then
  say -v Kyoko "Completed $1"
else
  say -v Kyoko "Error encountered for $1"
fi
}

export EDITOR=vim
alias hack=vim

alias killadobe='sudo cp /dev/null /private/var/root/Library/Logs/PDApp.log'

export NVM_DIR="/Users/madelaine/.nvm"

# creeped from @compnerd's dotfiles:
# https://github.com/compnerd/dotfiles/blob/master/zshrc
# alias ping='ping -c4'

#
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

alias killqld='find /private/var/folders/ -name com.apple.QuickLook.thumbnailcache | sudo xargs rm -rf && /usr/bin/killall -9 quicklookd'

alias killcisco="kill -9 $(pgrep -i cisco)"

export DOCKER_ID_USER="intellectuallyswole"

alias killaudio="ps aux | grep 'coreaudio[d]' | awk '{print $2}' | xargs sudo kill"

alias py3='python3'
alias py='python3'

export ANDROID_HOME="$HOME/Library/Android/sdk/"

alias bluetooth='system_profiler SPBluetoothDataType'

export PATH="$PATH:/Applications/Postgres.app//Contents/Versions/11/bin/"

function badtouch {
  pkill "Touch Bar agent";
  killall ControlStrip;
}

# Docker
function docker-pg {
  docker pull postgres
  mkdir -p $HOME/docker/volumes/postgres
  docker run --rm   --name pg-docker -e POSTGRES_PASSWORD=docker -d -p 5432:5432 -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  postgres
  echo "Password is docker\n"
	sleep 5
  psql -h localhost -U postgres -d postgres
}

function dockerprune {
	docker rm $(docker ps -q -f 'status=exited')
	docker rmi $(docker images -q -f "dangling=true")
}


# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/src/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/src/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '$HOME/src/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/src/google-cloud-sdk/completion.zsh.inc'; fi

# Golang
export PATH="$PATH:/usr/local/go/bin"

# History changes!
# https://blog.sanctum.geek.nz/better-bash-history/
# Append to history file after each command (can be shared across sessions).
setopt INC_APPEND_HISTORY

# The default maximum number of commands saved into the .bash_history file is a rather meager 500.
# If you want to keep history further back than a few weeks or so, you may as well bump this up by
# explicitly setting $HISTSIZE to a much larger number in your .bashrc.
HISTSIZE=1000000
#  We can do the same thing with the $HISTFILESIZE variable.
HISTFILESIZE=1000000
# You can prevent commands that start with a space from going into history by setting $HISTCONTROL to ignorespace. You can also ignore duplicate commands, for example repeated du calls to watch a file grow, by adding ignoredups. Thereâ€™s a shorthand to set both in ignoreboth.
HISTCONTROL=ignoreboth

# If you set $HISTTIMEFORMAT to something useful, Bash will record the timestamp of each command in its history. In this variable you can specify the format in which you want this timestamp displayed when viewed with history. I find the full date and time to be useful, because it can be sorted easily and works well with tools like cut and awk.
HISTTIMEFORMAT='%F %T '

# By default, Bash only records a session to the .bash_history file on disk when the session terminates. This means that if you crash or your session terminates improperly, you lose the history up to that point. You can fix this by recording each line of history as you issue it, through the $PROMPT_COMMAND variable:
PROMPT_COMMAND='history -a'


# Start tmux on launch
tmux attach || tmux
