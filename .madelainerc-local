export SHELL=zsh;

#hg aliases
alias hw='hg log --numstat';
alias brh='hg bookmarks';
alias hst='hg status';
alias hupdate='hg commit -A --amend --reuse-message .';

#git
alias g='git';
alias gw='git log --numstat';

# git compatibility w/ main and master
alias gcom='git checkout main 2> /dev/null || git checkout master'
gbmaster () {
		[ $(git rev-parse --verify main 2> /dev/null) ] && echo main || echo master
}

alias br='git branch';
alias st='git status';
alias cont='git rebase --continue; git cherry-pick --continue;'
alias gupdate='git commit -a --amend --reuse-message=HEAD'
alias amend='git commit -a --amend --reuse-message=HEAD'
alias up='git fetch; git rebase origin/master';
alias reb='git rebase -i';
alias rb='git rebase';
alias change='git log --reverse origin/stable..';
function mup () {
  branchname="$(git symbolic-ref --short HEAD)"
	main_branch="$(gbmaster)"
  git checkout $main_branch && git fetch -p origin &&  git reset --hard "origin/$main_branch"
  git checkout "$branchname"
}
alias co='git checkout';
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %C(cyan)%an%Creset %C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative";
function gb () {
  git branch $1 && git checkout $1
}
function branchclean() {
  git fetch --prune; git branch -vv | grep ': gone]' |  grep -v "\*" | awk '{ print $1; }' | xargs git branch -D;
}

# tmux
alias tsb='tmux show-buffer'
alias tcp='tmux show-buffer | pbcopy'
function notify {
if $@
then
  say -v Kyoko "Completed $1"
else
  say -v Kyoko "Error encountered for $1"
fi
}

export EDITOR=vim
alias hack=vim

alias killadobe='sudo cp /dev/null /private/var/root/Library/Logs/PDApp.log'

export NVM_DIR="/Users/madelaine/.nvm"

# creeped from @compnerd's dotfiles:
# https://github.com/compnerd/dotfiles/blob/master/zshrc
# alias ping='ping -c4'

#
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

alias killqld='find /private/var/folders/ -name com.apple.QuickLook.thumbnailcache | sudo xargs rm -rf && /usr/bin/killall -9 quicklookd'

alias killcisco="kill -9 $(pgrep -i cisco)"

export DOCKER_ID_USER="intellectuallyswole"

alias killaudio="ps aux | grep 'coreaudio[d]' | awk '{print $2}' | xargs sudo kill"

alias py3='python3'
alias py='python3'

export ANDROID_HOME="$HOME/Library/Android/sdk/"

alias bluetooth='system_profiler SPBluetoothDataType'

export PATH="$PATH:/Applications/Postgres.app//Contents/Versions/11/bin/"

function badtouch {
  pkill "Touch Bar agent";
  killall ControlStrip;
}

# Docker
function docker-pg {
  docker pull postgres
  mkdir -p $HOME/docker/volumes/postgres
  docker run --rm   --name pg-docker -e POSTGRES_PASSWORD=docker -d -p 5432:5432 -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  postgres
  echo "Password is docker\n"
	sleep 5
  psql -h localhost -U postgres -d postgres
}

function dockerprune {
	docker rm $(docker ps -q -f 'status=exited')
	docker rmi $(docker images -q -f "dangling=true")
}


# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/src/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/src/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '$HOME/src/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/src/google-cloud-sdk/completion.zsh.inc'; fi

# Golang
export PATH="$PATH:/usr/local/go/bin"

# History changes!
# https://blog.sanctum.geek.nz/better-bash-history/
# https://jdhao.github.io/2021/03/24/zsh_history_setup/
export HISTFILE=~/.zsh_history

# the detailed meaning of the below three variable can be found in `man zshparam`.
# Append to history file after each command (can be shared across sessions).
setopt INC_APPEND_HISTORY_TIME
export HISTSIZE=1000000
export HISTFILESIZE=1000000000 # not sure if this is zsh?
export SAVEHIST=1000000

# The meaning of these options can be found in man page of `zshoptions`.
setopt HIST_IGNORE_ALL_DUPS  # do not put duplicated command into history list
setopt HIST_SAVE_NO_DUPS  # do not save duplicated command
setopt HIST_REDUCE_BLANKS  # remove unnecessary blanks
setopt INC_APPEND_HISTORY_TIME  # append command to history file immediately after execution
setopt EXTENDED_HISTORY  # record command start time
export HISTTIMEFORMAT="[%F %T] "
# History substring search.
# Will fail if you don't first `brew install zsh-history-substring-search`
source /opt/homebrew/share/zsh-history-substring-search/zsh-history-substring-search.zsh

# bind up and down keys
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
# more config: https://github.com/zsh-users/zsh-history-substring-search#configuration

# Tab completion (ZSH-specific)
autoload -Uz compinit
# -i to ignore potentially insecure directories (run `compaudit` to see which ones)
compinit -i

